{"ast":null,"code":"import { createNewUser } from \"./authentication\";\nconst userId = \"7227ca64-8e82-4054-babb-42db7599613f\";\nexport function postNewUser(newUser) {\n  let body = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"picture\": \"\"\n  };\n  createNewUser(newUser).then(body.name = newUser.name, body.email = newUser.email, body.password = newUser.password, body.picture = newUser.picture);\n  console.log(newUser); // const options = {\n  //   method: \"POST\",\n  //   headers: {\n  //     \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   body: JSON.stringify(newUser)\n  // }\n  // fetch(\"http://localhost:8080/usuarios/criar-cliente\", options);\n}\nexport function getLoggedUserId() {\n  return userId;\n}\nexport function getLoggedUser() {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(\"http://localhost:8080/usuarios/todos-os-usuarios/\" + userId, options).then(response => response.json());\n}\nexport function postNewClient(newClient) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newClient)\n  };\n  fetch(\"http://localhost:8080/usuarios/criar-usuario\", options);\n}\nexport function deleteClient(id) {\n  const options = {\n    method: \"DELETE\",\n    headers: {\n      \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  fetch(\"http://localhost:8080/clientes/deletar-cliente/\" + id, options);\n}","map":{"version":3,"names":["createNewUser","userId","postNewUser","newUser","body","then","name","email","password","picture","console","log","getLoggedUserId","getLoggedUser","options","method","headers","fetch","response","json","postNewClient","newClient","JSON","stringify","deleteClient","id"],"sources":["/home/mateusbrito/Área de Trabalho/ExemplosReact/src/services/apiRequests.js"],"sourcesContent":["import { createNewUser } from \"./authentication\";\n\nconst userId = \"7227ca64-8e82-4054-babb-42db7599613f\";\n\nexport function postNewUser(newUser){\n  let body = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"picture\": \"\"\n  };\n\n  createNewUser(newUser)\n    .then(\n      body.name = newUser.name,\n      body.email = newUser.email,\n      body.password = newUser.password,\n      body.picture = newUser.picture,\n    );\n\n  console.log(newUser);\n\n  // const options = {\n  //   method: \"POST\",\n  //   headers: {\n  //     \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   body: JSON.stringify(newUser)\n  // }\n  \n  // fetch(\"http://localhost:8080/usuarios/criar-cliente\", options);\n}\n\nexport function getLoggedUserId(){\n  return userId;\n}\n\nexport function getLoggedUser(){\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n      \"Content-Type\": \"application/json\",\n    },\n  }\n\n  return fetch(\"http://localhost:8080/usuarios/todos-os-usuarios/\"+userId, options).then(response => response.json());\n}\n\nexport function postNewClient(newClient){\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newClient)\n  }\n  \n  fetch(\"http://localhost:8080/usuarios/criar-usuario\", options);\n}\n\nexport function deleteClient(id){\n  const options = {\n    method: \"DELETE\",\n    headers: {\n      \"Authorization\": \"Basic YWRtaW46YWRtaW4=\",\n      \"Content-Type\": \"application/json\",\n    },\n  }\n  \n  fetch(\"http://localhost:8080/clientes/deletar-cliente/\"+id, options);\n}"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,MAAMC,MAAM,GAAG,sCAAf;AAEA,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA6B;EAClC,IAAIC,IAAI,GAAG;IACT,QAAQ,EADC;IAET,SAAS,EAFA;IAGT,YAAY,EAHH;IAIT,WAAW;EAJF,CAAX;EAOAJ,aAAa,CAACG,OAAD,CAAb,CACGE,IADH,CAEID,IAAI,CAACE,IAAL,GAAYH,OAAO,CAACG,IAFxB,EAGIF,IAAI,CAACG,KAAL,GAAaJ,OAAO,CAACI,KAHzB,EAIIH,IAAI,CAACI,QAAL,GAAgBL,OAAO,CAACK,QAJ5B,EAKIJ,IAAI,CAACK,OAAL,GAAeN,OAAO,CAACM,OAL3B;EAQAC,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAhBkC,CAkBlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;AACD;AAED,OAAO,SAASS,eAAT,GAA0B;EAC/B,OAAOX,MAAP;AACD;AAED,OAAO,SAASY,aAAT,GAAwB;EAC7B,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KADM;IAEdC,OAAO,EAAE;MACP,iBAAiB,wBADV;MAEP,gBAAgB;IAFT;EAFK,CAAhB;EAQA,OAAOC,KAAK,CAAC,sDAAoDhB,MAArD,EAA6Da,OAA7D,CAAL,CAA2ET,IAA3E,CAAgFa,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5F,CAAP;AACD;AAED,OAAO,SAASC,aAAT,CAAuBC,SAAvB,EAAiC;EACtC,MAAMP,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MACP,iBAAiB,wBADV;MAEP,gBAAgB;IAFT,CAFK;IAMdZ,IAAI,EAAEkB,IAAI,CAACC,SAAL,CAAeF,SAAf;EANQ,CAAhB;EASAJ,KAAK,CAAC,8CAAD,EAAiDH,OAAjD,CAAL;AACD;AAED,OAAO,SAASU,YAAT,CAAsBC,EAAtB,EAAyB;EAC9B,MAAMX,OAAO,GAAG;IACdC,MAAM,EAAE,QADM;IAEdC,OAAO,EAAE;MACP,iBAAiB,wBADV;MAEP,gBAAgB;IAFT;EAFK,CAAhB;EAQAC,KAAK,CAAC,oDAAkDQ,EAAnD,EAAuDX,OAAvD,CAAL;AACD"},"metadata":{},"sourceType":"module"}